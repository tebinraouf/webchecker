context t_div { 
	constraint InButtonGroup {
		guard : self.class.includes("btn-secondary")
		check : self.parent.classes.includes("btn-group")
		message : "btn-secondary divs should be contained under btn-group."
	}
	constraint RowUnderContainer {
		guard : self.class.includes("row")
		check : self.parent.classes.includes("container")
		message : "row should be under container."
	}
	constraint ColUnderRow {
		guard : self.class.includes("col-sm-4")
		check : self.parent.classes.includes("row")
		message : "col-sm-4 divs should be contained under row."
	}
	constraint Media {
		guard : self.class.includes("media-body")
		check : self.parent.classes.includes("media")
		message : "media-body should be contained under media."
	}
}
context t_li {
	constraint NavItemUnderNav {
        guard : self.class.includes("nav-item")
        check : self.parent.classes.includes("nav")
        message : "nav-item should be contained under nav."
    }
}
context t_button { 
    constraint ScreenReaderButton {
        guard : self.class.includes("close")
        check : self.hasAttr("aria-label")
        message : "A button with class close should have aria-label defined for assistive technologies."
    }
}
context t_img { 
    constraint ImageInPictureWithImgClass {
        guard : self.parent.is("picture")
        check : self.class.includes("img-*")
        message : "img element in a picture element should have img-* class(es)"
    }
}
context t_table { 
    constraint HasCaption {
        guard : self.type.exists()
        check : self.type.hasChild("caption")
        message : "A table should have a caption tag for screen readers."
    }
}
context t_table { 
    constraint ResponsiveTable {
        guard : self.class.includes("table") and self.parent.is("div")
        check : self.parent.classes.includes("table-responsive-*")
        message : "A responsive table should have a parent div with table-responsive-* class(es)."
    }
}
context t_figcaption { 
	constraint ParentHasFigureClass {
		guard : self.type.exists()
		check : self.parent.classes.includes("figure") and self.class.includes("figure-caption")
		message : "A figcaption tag should have a figure parent with figure class and itself should have figure-caption class"
	}
}

context t_div { 
    constraint DIVWithAlertClass {
        guard : self.class.includes("alert") or self.class.includes("alert-*")
        check : self.hasAttr("role")
        message : "A div element with class alert or alert-* should have the role attribute defined for assistive technologies."
    }
    //a more strict constraint than above
    constraint DIVWithAlertClassAndSrOnly {
        guard : self.class.includes("alert") or self.class.includes("alert-*")
        check : self.hasAttr("role") and self.children.hasClass("sr-only")
        message : "A div element with class alert or alert-* should have the role attribute and at least a child with sr-only class for assistive technologies."
    }
}
context t_a { 
    constraint AlertLinkInDivAlert {
        guard : self.hasClass("alert-link")
        check : self.parent.classes.includes("alert") and self.parent.classes.includes("alert-*")
        message : "An a tag with alert-link class should have a parent element with alert and alert-* class."
    }
}
context t_h4 { 
    constraint AlertHeadingInDivWithAlertClass {
        guard : self.class.includes("alert-heading")
        check : self.parent.classes.includes("alert") and self.parent.classes.includes("alert-*")
        message : "An h4 element (h*) with alert-heading class should have a parent element with alert and alert-* class."
    }
}
context t_h4 { 
    constraint AlertHeadingInDivWithAlertClasses {
        guard : self.class.includes("alert-heading")
        check : self.parent.hasClasses("alert alert-*") //hasClasses accept multiple classes separated by a space.
        message : "An h4 element (h*) with alert-heading class should have a parent element with alert and alert-* class."
    }
}
context t_button { 
    constraint DismissButtonRelation {
        guard : self.parent.hasClass("alert") and self.hasClass("close")
        check : self.hasAttr("data-dismiss")
        message : "A button in a div element with alert class should have a data-dismiss attribute."
    }
}